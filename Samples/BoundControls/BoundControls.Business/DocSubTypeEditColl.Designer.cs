//  This file was generated by CSLA Object Generator - CslaGenFork v4.5
//
// Filename:    DocSubTypeEditColl
// ObjectType:  DocSubTypeEditColl
// CSLAType:    EditableChildCollection

using System;
using System.Data;
using System.Data.SqlClient;
using Csla;
using Csla.Data;

namespace BoundControls.Business
{

    /// <summary>
    /// DocSubTypeEditColl (editable child list).<br/>
    /// This is a generated base class of <see cref="DocSubTypeEditColl"/> business object.
    /// </summary>
    /// <remarks>
    /// This class is child of <see cref="DocTypeEdit"/> editable child object.<br/>
    /// The items of the collection are <see cref="DocSubTypeEdit"/> objects.
    /// </remarks>
    [Serializable]
    public partial class DocSubTypeEditColl : BusinessBindingListBase<DocSubTypeEditColl, DocSubTypeEdit>
    {

        #region Find Methods

        /// <summary>
        /// Finds a <see cref="DocSubTypeEdit"/> item of the <see cref="DocSubTypeEditColl"/> collection, based on a given DocSubTypeID.
        /// </summary>
        /// <param name="docSubTypeID">The DocSubTypeID.</param>
        /// <returns>A <see cref="DocSubTypeEdit"/> object.</returns>
        public DocSubTypeEdit FindDocSubTypeEditByDocSubTypeID(int docSubTypeID)
        {
            for (var i = 0; i < this.Count; i++)
            {
                if (this[i].DocSubTypeID.Equals(docSubTypeID))
                {
                    return this[i];
                }
            }

            return null;
        }

        #endregion

        #region Factory Methods

        /// <summary>
        /// Factory method. Creates a new <see cref="DocSubTypeEditColl"/> collection.
        /// </summary>
        /// <returns>A reference to the created <see cref="DocSubTypeEditColl"/> collection.</returns>
        internal static DocSubTypeEditColl NewDocSubTypeEditColl()
        {
            return DataPortal.CreateChild<DocSubTypeEditColl>();
        }

        /// <summary>
        /// Factory method. Loads a <see cref="DocSubTypeEditColl"/> object from the given SafeDataReader.
        /// </summary>
        /// <returns>A reference to the fetched <see cref="DocSubTypeEditColl"/> object.</returns>
        public static DocSubTypeEditColl GetDocSubTypeEditColl()
        {
            var docSubTypeList = DataPortal.Fetch<DocSubTypeEditColl>();
            docSubTypeList.Add(LoadItem(1, null, "A Root"));
            docSubTypeList.Add(LoadItem(10, 5, "Sun 2.1.5"));
            docSubTypeList.Add(LoadItem(2, null, "A Root"));
            docSubTypeList.Add(LoadItem(3, 1, "Sun 1.1"));
            docSubTypeList.Add(LoadItem(4, 1, "Sun 1.2"));
            docSubTypeList.Add(LoadItem(5, 2, "Sun 2.1"));
            docSubTypeList.Add(LoadItem(6, 5, "Sun 2.1.1"));
            docSubTypeList.Add(LoadItem(7, 5, "Sun 2.1.2"));
            docSubTypeList.Add(LoadItem(8, 5, "Sun 2.1.3"));
            docSubTypeList.Add(LoadItem(9, 5, "Sun 2.1.4"));

            return docSubTypeList;
        }

        private static DocSubTypeEdit LoadItem(int docSubTypeID, int? docSubTypeParentID, string docSubTypeName)
        {
            var item = DocSubTypeEdit.NewDocSubTypeEdit();
            item.DocSubTypeID = docSubTypeID;
            item.DocSubTypeParentID = docSubTypeParentID;
            item.DocSubTypeName = docSubTypeName;

            return item;
        }

        #endregion

        #region Constructor

        /// <summary>
        /// Initializes a new instance of the <see cref="DocSubTypeEditColl"/> class.
        /// </summary>
        /// <remarks> Do not use to create a Csla object. Use factory methods instead.</remarks>
        public DocSubTypeEditColl()
        {
            // Prevent direct creation

            // show the framework that this is a child object
            MarkAsChild();

            var rlce = RaiseListChangedEvents;
            RaiseListChangedEvents = false;
            AllowNew = true;
            AllowEdit = true;
            AllowRemove = true;
            RaiseListChangedEvents = rlce;
        }

        #endregion

        /*protected void DataPortal_Create()
        {
            
        }*/

        protected void DataPortal_Fetch()
        {

        }

    }
}

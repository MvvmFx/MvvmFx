//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvvmFx.Windows.Properties {
    using System;

    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MvvmFx.Windows.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to This binding is already activated..
        /// </summary>
        internal static string AlreadyActivated {
            get {
                return ResourceManager.GetString("AlreadyActivated", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to An item inside the enumeration was null..
        /// </summary>
        internal static string AnItemWasNull {
            get {
                return ResourceManager.GetString("AnItemWasNull", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The argument must be a collection..
        /// </summary>
        internal static string ArgumentMustBeCollection {
            get {
                return ResourceManager.GetString("ArgumentMustBeCollection", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Bindings added to a MultiSourceBinding must not already be activated..
        /// </summary>
        internal static string BindingAlreadyActivatedExceptionMessage {
            get {
                return ResourceManager.GetString("BindingAlreadyActivatedExceptionMessage", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to BindingBase is currently activated and cannot be modified..
        /// </summary>
        internal static string BindingBaseActivatedExceptionMessage {
            get {
                return ResourceManager.GetString("BindingBaseActivatedExceptionMessage", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to BindingBase is not yet activated..
        /// </summary>
        internal static string BindingBaseNotActivatedExceptionMessage {
            get {
                return ResourceManager.GetString("BindingBaseNotActivatedExceptionMessage", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to A binding being activated must be present in the binding container within which it is being activated..
        /// </summary>
        internal static string BindingMustBeActivatedInOwningContainer {
            get {
                return ResourceManager.GetString("BindingMustBeActivatedInOwningContainer", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to A command binding being activated must be present in the command binding container within which it is being activated..
        /// </summary>
        internal static string CommandBindingMustBeActivatedInOwningContainer {
            get {
                return ResourceManager.GetString("CommandBindingMustBeActivatedInOwningContainer", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to All MultiSourceBindings require a converter..
        /// </summary>
        internal static string ConverterIsRequired {
            get {
                return ResourceManager.GetString("ConverterIsRequired", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The ConvertTargetToSource method on an IMultiValueConverter must return a non-null value..
        /// </summary>
        internal static string ConverterMustReturnValue {
            get {
                return ResourceManager.GetString("ConverterMustReturnValue", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Event for CommandBinding is not valid..
        /// </summary>
        internal static string EventForCommandBindingIsNotValid {
            get {
                return ResourceManager.GetString("EventForCommandBindingIsNotValid", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The converter for this MultiSourceBinding returned {0} values when {1} were expected..
        /// </summary>
        internal static string ExpectedMoreOrLessValues {
            get {
                return ResourceManager.GetString("ExpectedMoreOrLessValues", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to No binding found for component of type {0}..
        /// </summary>
        internal static string NoBindingForComponentExceptionMessage {
            get {
                return ResourceManager.GetString("NoBindingForComponentExceptionMessage", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to At least one PropertyExpressionPart is required..
        /// </summary>
        internal static string OnePartRequired {
            get {
                return ResourceManager.GetString("OnePartRequired", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Property name &apos;{0}&apos; not registered..
        /// </summary>
        internal static string PropertyNameNotRegisteredException {
            get {
                return ResourceManager.GetString("PropertyNameNotRegisteredException", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to One or more properties are not registered for this type.
        /// </summary>
        internal static string PropertyNotRegistered {
            get {
                return ResourceManager.GetString("PropertyNotRegistered", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Cannot register property {0}, a PropertyInfo with the same name already exists..
        /// </summary>
        internal static string PropertyRegisterDuplicateNotAllowed {
            get {
                return ResourceManager.GetString("PropertyRegisterDuplicateNotAllowed", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Cannot register property {0} after containing type ({1}) has been instantiated.
        /// </summary>
        internal static string PropertyRegisterNotAllowed {
            get {
                return ResourceManager.GetString("PropertyRegisterNotAllowed", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Lambda expression &apos;{0}&apos; is not supported..
        /// </summary>
        internal static string UnsupportedExpression {
            get {
                return ResourceManager.GetString("UnsupportedExpression", resourceCulture);
            }
        }
    }
}
